
      // defer row.Close()

      // for rows.Next() {
      //
        // var (
        //   Id int
        //   username string
        //   password string
        //   role string
        //   availBalance int
        // )
      //
        // if err := rows.Scan(&Id, &username, &password, &role, &availBalance); err != nil {
        //   log.Fatal(err)
        // }
      //
        // log.Print(Id, username, password, role, availBalance)
      // }
      //
      // if !rows.NextResultSet() {
      //   log.Fatalf("expected more result sets : %v", rows.Err())
      // }




      // r.POST("/signin", handleSignIn)
      // stmt, err := db.Prepare("INSERT INTO customers (Id, Name, Address, AvailBalance, AcType) VALUES(?, ?, ?, ?, ?)")
      // if err != nil {
      //   log.Fatal(err)
      // }
      // stmt2, err := db.Prepare("DELETE FROM customers WHERE Id > 0")
      // _, err = stmt2.Exec()
      // if err != nil {
      //   log.Fatal(err)
      //   }
      // x := customer{356,"anshik","purnea",4356,"savings"}
      // _, err = stmt.Exec(x.Id, x.Name, x.Address, x.AvailBalance, x.AcType)
      // if err != nil {
      //   log.Fatal(err)
      //   }


      var (
        Idq int
        usernameq string
        passwordq string
        roleq string
        availBalanceq int
      )

      q := "SELECT * FROM customers"
      row := db.QueryRow(q)

      if err := row.Scan(&Idq, &usernameq, &passwordq, &roleq, &availBalanceq); err != nil {
        log.Fatal(err)
      }

      log.Print(Idq, usernameq, passwordq, roleq, availBalanceq)

      r.GET("/credit", func(c *gin.Context) {
        c.JSON(http.StatusOK, gin.H {"message" : "piong"})
      })

      // c.HTML(http.StatusOK, "credit.html", gin.H{
      //   // "badhiya" : "ha sb badhiya"
      // })
//c.Redirect(http.StatusMovedPermanently, "https://www.google.com/")


    create table transactions(
    id INT PRIMARY KEY AUTO_INCREMENT ,
    t_datetime VARCHAR(255) NOT NULL,
    user_credited VARCHAR(255) NOT NULL,
    user_debited VARCHAR(255) NOT NULL,
    creditedUser_finalBalance INT DEFAULT 0,
    debitedUser_finalBalance INT DEFAULT 0
    );
